{"version":3,"sources":["App.tsx","components/Good/Good.tsx","index.tsx"],"names":["SortType","Good","good","goodsFromServer","App","state","isReversed","sortType","NONE","handleAlphabetSort","setState","ALPHABET","handleLengthSort","LENGTH","handleReverse","handleReset","getReorderedGoods","goods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","this","canReset","className","type","classNames","onClick","map","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,uGCbQC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC7B,oBAAI,UAAQ,OAAZ,SACGA,KDFQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGH,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAgBE,IAAMI,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUP,EAASQ,MAHvB,EAMEC,mBAAqB,kBACnB,EAAKC,UAAS,SAAAL,GAAK,kCACdA,GADc,IAEjBE,SAAUP,EAASW,eATzB,EAaEC,iBAAmB,kBACjB,EAAKF,SAAS,CACZH,SAAUP,EAASa,UAfzB,EAmBEC,cAAgB,kBACd,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBArBzB,EAyBES,YAAc,kBACZ,EAAKL,SAAS,CACZH,SAAUP,EAASQ,KACnBF,YAAY,KA5BlB,EAgCEU,kBAAoB,SAClBC,EADkB,GAGd,IADFV,EACC,EADDA,SAAUD,EACT,EADSA,WAENY,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAKP,EAASW,SACZ,OAAOS,EAAME,cAAcD,GAE7B,KAAKrB,EAASa,OACZ,OAAOO,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAINjB,EAAaY,EAAaM,UAAYN,GAnDjD,4CAsDE,WACE,IAAMA,EAAeO,KAAKT,kBACxBb,EACAsB,KAAKpB,OAGP,EAAiCoB,KAAKpB,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZoB,EAAWnB,IAAaP,EAASQ,MAAQF,EAE/C,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYtB,IAAaP,EAASW,WAEtCmB,QAASL,KAAKhB,mBAPhB,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYtB,IAAaP,EAASa,SAEtCiB,QAASL,KAAKb,iBAPhB,4BAYA,wBACEgB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAavB,IAEjBwB,QAASL,KAAKX,cAPhB,qBAYCY,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASL,KAAKV,YAHhB,sBAUJ,6BACGG,EAAaa,KAAI,SAAA7B,GAAI,OACpB,cAAC,EAAD,CAAMA,KAAMA,GAAWA,eAnHnC,GAAyB8B,iBEhCzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.111fc9b6.chunk.js","sourcesContent":["import { PureComponent } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { Good } from './components/Good/Good';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends PureComponent <{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleAlphabetSort = () => (\n    this.setState(state => ({\n      ...state,\n      sortType: SortType.ALPHABET,\n    }))\n  );\n\n  handleLengthSort = () => (\n    this.setState({\n      sortType: SortType.LENGTH,\n    })\n  );\n\n  handleReverse = () => (\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }))\n  );\n\n  handleReset = () => (\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    })\n  );\n\n  getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    return isReversed ? visibleGoods.reverse() : visibleGoods;\n  };\n\n  render() {\n    const visibleGoods = this.getReorderedGoods(\n      goodsFromServer,\n      this.state,\n    );\n\n    const { sortType, isReversed } = this.state;\n    const canReset = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.handleAlphabetSort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.handleLengthSort}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {canReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <Good good={good} key={good} />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import { FC } from 'react';\n\ntype Props = {\n  good: string;\n};\n\nexport const Good: FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}